import Head from 'next/head'
import Layout from '../components/Layout'
import useSWR from 'swr'
import Link from 'next/link'
import Image from 'next/image'
import styles from '../styles/Movies.module.css'
import { useEffect, useState } from 'react'

const fetcher = url => fetch(url).then(res => res.json())

export default function MoviesHome() {

  const { data, error } = useSWR('/api/trending-movies', fetcher)
  const [ slideIndex, setSlideIndex ] = useState(1);

  useEffect(() => {
    showSlides(slideIndex);
  })

  if (error) return <div>Failed to load</div>
  if (!data) return <div>Loading...</div>

  function handleRightClick() {
    if (slideIndex + 1 > data.popular.length) {
      setSlideIndex(1);
    } else {
      setSlideIndex(slideIndex + 1);
    }
  }

  function handleLeftClick() {
    if (slideIndex - 1 < 1) {
      setSlideIndex(data.popular.length);
    } else {
      setSlideIndex(slideIndex - 1);
    }
  }

  function showSlides(n) {
    let slides = document.getElementsByClassName(`${styles.mySlides}`);
    let dots = document.getElementsByClassName(`${styles.dot}`);

    for (let i = 0; i < slides.length; i++) {
      slides[i].style.display = "none";
    }
    for (let i = 0; i < dots.length; i++) {
      dots[i].className = dots[i].className.replace(` ${styles.active}`, "");
    }
    if (slides[slideIndex-1]) {
      slides[slideIndex-1].style.display = "block";
    }
    if (dots[slideIndex-1]) {
      dots[slideIndex-1].className += ` ${styles.active}`;
    }
  }

  console.log(data);

  return (
    <Layout>
      <div>
        <Head>
          <title>Ramedia</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className='overflow-x-hidden'>
          <div className='w-screen flex justify-center py-12'>
            <h1 className='text-5xl font-semibold tracking-wider'>Movies</h1>
          </div>

          <div className='flex flex-row'>
            <div className='w-3/4 relative z-30'>
              {
                data.popular.map((element) => (
                  <div key={element.title} id={data.popular.indexOf(element)} className={`${styles.mySlides} ${styles.fade}`}>
                    <Image key={element.title} src={element.imageurl} alt={element.title} width={1493} height={839} className='w-full rounded-r-3xl' />
                  </div>
                ))
              }

              <a className={styles.prev} onClick={handleLeftClick}>&#10094;</a>
              <a className={styles.next} onClick={handleRightClick}>&#10095;</a>

              <div className='absolute bottom-4 left-2/4'>
                <div className='relative -left-2/4 space-x-5'>
                  <span className={styles.dot} onClick={() => setSlideIndex(1)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(2)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(3)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(4)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(5)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(6)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(7)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(8)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(9)}></span>
                  <span className={styles.dot} onClick={() => setSlideIndex(10)}></span>
                </div>
              </div>
            </div>

            <div className='grow bg-red-300 z-40'>

            </div>
          </div>

          <div className='flex justify-center mt-4'>
            <form action='/search' method='GET'
              className='h-16 w-2/4 bg-[#FF971D] opacity-80 rounded-full
                          flex items-center px-4
                          hover:opacity-100 focus-within:opacity-100
                          transition-all duration-200'>
              <button type="submit" value="Submit">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
                  <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </button>
              <input type="text" id='search-text' name='keyword' placeholder="Search Movies"
                className='grow px-4 text-lg text-[#131313] font-sans font-medium placeholder:italic placeholder:text-[#131313] bg-[#FF971D] focus:outline-0'/>
            </form>
          </div>

          <div className='text-center mt-4'>
            <h2 className='text-4xl font-semibold text-[#303841]'>Trending Movies</h2>
            <div className='card-Container pt-8 mb-4'>
              {
                data.trending.map((element) => (
                  <div key={element.movie.title} className='card'>
                    <Link href={`/movie/${element.movie.ids.imdb}`}>
                      <a>
                        <Image src={element.movie.imageurl} alt={element.movie.title} width={300} height={450} className='w-16 rounded-xl' />
                        <h1 className='text-lg font-semibold px-2 h-14 overflow-hidden text-ellipsis text-[#303841]'>{element.movie.title}</h1>
                      </a>
                    </Link>
                  </div>
                ))
              }
            </div>
          </div>

          <div className='h-12 w-screen bg-teal-400 flex flex-row justify-center'>
            Movie Categories
          </div>
        </main>
      </div>
    </Layout>
  )
}